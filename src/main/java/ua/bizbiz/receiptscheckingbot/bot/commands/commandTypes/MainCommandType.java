package ua.bizbiz.receiptscheckingbot.bot.commands.commandTypes;

import lombok.Getter;
import lombok.RequiredArgsConstructor;

import java.util.Arrays;
import java.util.Optional;

@Getter
@RequiredArgsConstructor
public enum MainCommandType {
    // Admin commands
    ADD_NEW_USER("–î–æ–¥–∞—Ç–∏ –Ω–æ–≤–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ \uD83D\uDC64"),
    CREATE_REPORT("–°—Ç–≤–æ—Ä–∏—Ç–∏ –∑–≤—ñ—Ç \uD83D\uDCC1"),
    ADMIN_SHOW_PROMOTIONS("–ü–æ–∫–∞–∑–∞—Ç–∏ –∞–∫—Ü—ñ—ó \uD83D\uDCCB"),
    MAKE_AN_ANNOUNCEMENT("–ó—Ä–æ–±–∏—Ç–∏ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è \uD83D\uDCE3"),
    CHECK_RECEIPTS("–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–µ–∫—ñ–≤ üîç"),

    // User commands
    USER_SHOW_PROMOTIONS("–ê–∫—Ç—É–∞–ª—å–Ω—ñ –∞–∫—Ü—ñ—ó \uD83D\uDC8A"),
    SEND_RECEIPT("–í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ —á–µ–∫ \uD83E\uDDFE"),
    BALANCE("–ë–∞–ª–∞–Ω—Å \uD83D\uDCB0");

    private final String name;

    public static Optional<MainCommandType> parse(String name) {
        return Arrays.stream(values())
                .filter(command -> command.getName().equalsIgnoreCase(name))
                .findFirst();
    }
}
