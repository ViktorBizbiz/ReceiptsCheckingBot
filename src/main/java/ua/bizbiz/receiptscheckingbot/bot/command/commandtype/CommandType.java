package ua.bizbiz.receiptscheckingbot.bot.command.commandtype;

import lombok.Getter;
import lombok.RequiredArgsConstructor;
import ua.bizbiz.receiptscheckingbot.bot.command.commandtype.crud.PromotionCrudCommandTypeMark;
import ua.bizbiz.receiptscheckingbot.bot.command.commandtype.crud.UserCrudCommandTypeMark;
import ua.bizbiz.receiptscheckingbot.persistance.entity.ChatStatus;

import java.util.Arrays;
import java.util.Optional;

@Getter
@RequiredArgsConstructor
public enum CommandType {
    START("/start", HomeCommandTypeMark.class, ChatStatus.DEFAULT),
    HOME("‚óÄÔ∏è –ù–∞–∑–∞–¥", HomeCommandTypeMark.class, ChatStatus.DEFAULT),
    // Admin commands
    ADMIN_SHOW_USERS("–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ \uD83D\uDC65", MainCommandTypeMark.class, ChatStatus.AUTHORIZED_AS_ADMIN),
    CREATE_REPORT("–°—Ç–≤–æ—Ä–∏—Ç–∏ –∑–≤—ñ—Ç \uD83D\uDCC1", MainCommandTypeMark.class, ChatStatus.AUTHORIZED_AS_ADMIN),
    ADMIN_SHOW_PROMOTIONS("–ê–∫—Ü—ñ—ó \uD83D\uDCCB", MainCommandTypeMark.class, ChatStatus.AUTHORIZED_AS_ADMIN),
    MAKE_AN_ANNOUNCEMENT("–ó—Ä–æ–±–∏—Ç–∏ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è \uD83D\uDCE3", MainCommandTypeMark.class, ChatStatus.AUTHORIZED_AS_ADMIN),
    CHECK_RECEIPTS("–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–µ–∫—ñ–≤ üîç", MainCommandTypeMark.class, ChatStatus.AUTHORIZED_AS_ADMIN),

    // User commands
    USER_SHOW_PROMOTIONS("–ê–∫—Ç—É–∞–ª—å–Ω—ñ –∞–∫—Ü—ñ—ó \uD83D\uDC8A", MainCommandTypeMark.class, ChatStatus.AUTHORIZED_AS_USER),
    SEND_RECEIPT("–í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ —á–µ–∫ \uD83E\uDDFE", MainCommandTypeMark.class, ChatStatus.AUTHORIZED_AS_USER),
    BALANCE("–ë–∞–ª–∞–Ω—Å \uD83D\uDCB0", MainCommandTypeMark.class, ChatStatus.AUTHORIZED_AS_USER),

    TO_PERSON("–ö–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É \uD83D\uDC64", AnnouncementCommandTypeMark.class ,ChatStatus.SENDING_ANNOUNCEMENT),
    TO_CHAIN("–ú–µ—Ä–µ–∂—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ ‚õì", AnnouncementCommandTypeMark.class ,ChatStatus.SENDING_ANNOUNCEMENT),
    TO_ALL("–£—Å—ñ–º \uD83D\uDC65", AnnouncementCommandTypeMark.class ,ChatStatus.SENDING_ANNOUNCEMENT),

    CREATE_USER("–°—Ç–≤–æ—Ä–∏—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ ‚ûï", UserCrudCommandTypeMark.class, ChatStatus.ADMIN_GETTING_USERS),
    READ_USER("–ü–æ–¥—Ä–æ–±–∏—Ü—ñ –∑–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º \uD83E\uDEAA", UserCrudCommandTypeMark.class, ChatStatus.ADMIN_GETTING_USERS),
    UPDATE_USER("–ó–º—ñ–Ω–∏—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ \uD83D\uDD04", UserCrudCommandTypeMark.class, ChatStatus.ADMIN_GETTING_USERS),
    DELETE_USER("–í–∏–¥–∞–ª–∏—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ ‚ùå", UserCrudCommandTypeMark.class, ChatStatus.ADMIN_GETTING_USERS),

    CREATE_PROMOTION("–°—Ç–≤–æ—Ä–∏—Ç–∏ –∞–∫—Ü—ñ—é ‚ûï", PromotionCrudCommandTypeMark.class, ChatStatus.ADMIN_GETTING_PROMOTIONS),
    UPDATE_PROMOTION("–ó–º—ñ–Ω–∏—Ç–∏ –∞–∫—Ü—ñ—é \uD83D\uDD04", PromotionCrudCommandTypeMark.class, ChatStatus.ADMIN_GETTING_PROMOTIONS),
    DELETE_PROMOTION("–í–∏–¥–∞–ª–∏—Ç–∏ –∞–∫—Ü—ñ—é ‚ùå", PromotionCrudCommandTypeMark.class, ChatStatus.ADMIN_GETTING_PROMOTIONS);


    private final String name;
    private final Class<? extends Markable> classMarkable;
    private final ChatStatus status;

    public static Optional<CommandType> parse(String name) {
        return Arrays.stream(values())
                .filter(command -> command.getName().equalsIgnoreCase(name))
                .findFirst();
    }
}
